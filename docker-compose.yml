version : '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    networks:
      - zoo_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  brokerkafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: brokerkafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka_network
      - zoo_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://brokerkafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  kafka-consumers:
    build: 
      context: .
      dockerfile: src/kafka_consumer_producer/Dockerfile
    container_name: kafka-consumers
    depends_on:
      - brokerkafka
    environment:
      - SERVERS_K=brokerkafka:29092
    networks:
      - kafka_network

  kafka-mysql:
    image: mysql:latest
    container_name: kafka-mysql
    ports:
      - 3309:3306
    environment:
      - MYSQL_ROOT_PASSWORD=11111111
    volumes:
      - kafka-python-app-volume:/var/lib/mysql
      - kafka-python-app-volume-config:/etc/mysql
    networks:
      - db_network

  save-consumers:
    build: 
      context: .
      dockerfile: src/save_consumer/Dockerfile
    container_name: save-consumers
    depends_on:
      - brokerkafka
      - kafka-mysql
    environment:
      - SERVERS_K=brokerkafka:29092
    networks:
      - kafka_network
      - db_network
  
  data_drift_backend:
    build: 
      context: .
      dockerfile: src/data_drift_backend/Dockerfile
    container_name: data_drift_backend
    depends_on:
     - brokerkafka
     - kafka-mysql
    ports:
      - 80:80
    networks:
      - db_network
      - drift_network

  #data_drift_frontend:
  #  build: 
  #    context: .
  #    dockerfile: src/data_drift_frontend/Dockerfile
  #  container_name: data_drift_frontend
  #  depends_on:
  #    - data_drift_backend
  #  ports:
  #    - 8501:8501
  #  environment:
  #    - API_URL=http://data_drift_backend:80
  #  networks:
  #   - drift_network

  alert_frontend:
    build: 
      context: .
      dockerfile: src/alert_frontend/Dockerfile
    container_name: alert_frontend
    depends_on:
      - brokerkafka
    ports:
      - 8502:8502
    environment:
      - SERVERS_K=brokerkafka:29092
    networks:
      - kafka_network
    
networks:
  kafka_network:
    driver: bridge
  zoo_network:
    driver: bridge
  db_network:
    driver: bridge
  drift_network:
    driver: bridge
  alert_networks:
    driver: bridge
volumes:
  kafka-python-app-volume:
  kafka-python-app-volume-config: